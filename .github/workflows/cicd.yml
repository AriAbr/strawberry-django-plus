---
name: Run Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types:
      - released

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v2.0.3
        with:
          extra_args: -a

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        django-version: ["3.2.0", "4.0.0"]
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install poetry
          poetry install -E debug-toolbar -E enum
          poetry run pip install "Django~=${{ matrix.django-version }}"

      - name: Run tests
        run: |
          poetry run pytest --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true

  publish:
    runs-on: ubuntu-latest
    needs: [lint, tests]
    if: ${{ needs.lint.result == 'success' &&
      needs.tests.result == 'success' &&
      github.event.action == 'released' }}

    steps:
      - uses: actions/checkout@v2
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.6
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
